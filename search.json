[{"title":"Hello World","url":"/2025/09/19/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\n一、Quick Start1、Create a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"Transformer","url":"/2025/09/29/transformer/","content":"一、雷达1、启动雷达$ ros2 launch rslidar_sdk start.py\n2、将雷达格式转为velodyne格式$ ros2 launch rs_to_velodyne rs_to_velodyne.launch.xml\n订阅：&#x2F;points_raw发布：&#x2F;veloyne_points3、将三维点云转化为二维点云$ ros2 launch pointcloud_to_laserscan start_launch.py\n订阅：  &#x2F;velodyne_points (PointCloud2)发布：  &#x2F;scan (LaserScan)二、IMU1、惯性导航驱动$ ros2 launch imu_node imu_node.launch.py\n注：惯导驱动文件，发布imu消息等，如果gps可用，也会发布二、相机1、驱动$ ros2 run car_cmd_interface car_cmd_interface_node\n订阅：&emsp;&emsp;&#x2F;cmd_vel（geometry_msgs::msg::Twist，主要使用linear.x作为速度，单位m&#x2F;s）&emsp;&emsp;&#x2F;angle（std_msgs::msg::Float32，单位为角度）&emsp;&emsp;&#x2F;control_cmd（car_msg::msg::VehicleState）发布：&emsp;&emsp;&#x2F;vehicle_info（car_msg::msg::VehicleState）","categories":["智驾-感知"],"tags":["智驾"]},{"title":"智驾框架","url":"/2025/10/30/study/","content":"一、感知YOLOv5相机感知二、控制2.1、进入工作空间$ cd ~/your_workspace  #替换为你的工作空间\n2.2、编译car_msg功能包$ colcon build --packages-select car_msg #因为控制和底盘都依赖car_msg\n2.3、编译底盘模块和其他依赖$ colcon build\n2.4、刷新环境变量$ source install/setup.bash #每次打开终端都需要执行\n2.5、启动底盘节点$ ros2 run car_cmd_interface car_cmd_interface_node\n注意：可能会出现can0的问题，可以执行以下命令$ sudo busybox devmem 0x0c303018 w 0xc458$ sudo busybox devmem 0x0c303010 w 0xc400$ sudo busybox devmem 0x0c303008 w 0xc458$ sudo busybox devmem 0x0c303000 w 0xc400$ sudo modprobe can$ sudo modprobe can_raw$ sudo modprobe mttcan# 关闭can0$ sudo ip link set down can0# 启动，bitrate 500000 表示将 can0 接口的比特率设置为 500 kbps$ sudo ip link set can0 type can bitrate 500000# 打开can0$ sudo ip link set up can0\n2.6、查看车辆的状态信息# 可以先查看一下topic话题$ ros2 topic list#  查看 /vehicle_info话题$ ros2 topic echo /vehicle_info\n注：在启动底盘节点后会从底盘通过can0读取车辆状态数据发布到这个话题，最后在终端输出车辆信息2.7、给一个简单的控制命令查看车的反应情况$ ros2 topic pub -r 10 /control_cmd car_msg/msg/VehicleState &quot;&#123;&#x27;velocity&#x27;: 0.0, &#x27;steering&#x27;: 3.0, &#x27;brake&#x27;: 0.0, &#x27;gears&#x27;: 0, &#x27;led&#x27;: &#x27;no&#x27;, &#x27;battary&#x27;: 90.0&#125;&quot;\n注意car_msg的参数配置（如下图）\n可以查看一下长时间一个转角，然后突然给一个别的转角，反应如何三、slam建图3.1、lidarslam_ros23.1.1、启动雷达# 进入driver文件夹$ source install/setup.bash# 启动雷达驱动$ ros2 run rslidar_sdk start.py# 启动slam运行launch文件$ ros2 launch lidarslam lidarslam.launch.py\n注：注意查看雷达话题名字，在lidarslam的yaml配置文件进行订阅和正确的配置可以通过这个查看雷达是否被slam配置节点（scan_matcher)所订阅$ ros2 topic info /rslidar_points --verbose \nscan_matcher成功订阅刚开始rviz只有一个坐标轴（正常），接下来移动小车，改变雷达的位置和朝向，采集更多环境点云，会逐渐出现点云地图（PointCloud2 组件）监控 &#x2F;tf话题,若出现 frame_id: “map”, child_frame_id: “base_link” 的变换，说明 map 坐标系生成，RViz 中设置 Fixed Frame: map 即可显示地图。$ ros2 topic echo /tf | grep &quot;map&quot;\n检查节点日志#若有 Update map 或 Published transform from map to base_link 日志，说明地图构建正常。$ ros2 topic echo /rosout | grep &quot;scan_matcher&quot;\n\n四、控制4.1、启动了一下launch文件$ ros2 launch car_simple_follow start_all.launch.xml\n注：启动后光轮子转一下，没有任何别的反应","categories":["智驾-框架"],"tags":["智驾"]}]